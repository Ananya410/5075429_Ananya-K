#include <stdio.h>
#include <stdlib.h>
typedef struct {
    int *data;
    int size;
    int capacity;
} 
DynArr;
void append(DynArr *arr, int val) {
    if (arr->size == arr->capacity) {
        arr->capacity = arr->capacity == 0 ? 2 : arr->capacity * 2;
        arr->data = realloc(arr->data, arr->capacity * sizeof(int));
        if(!arr->data) 
        exit(1);
    }
    arr->data[arr->size++] = val;
}
int main() {
    int n, q;
    if(scanf("%d %d",&n,&q) != 2) 
    return 0;
 DynArr *arrays =calloc(n, sizeof(DynArr));
    int lastAnswer =0;
    int *answers =malloc(q * sizeof(int));
    int ansCount =0;
  for(int i = 0; i < q; i++) 
  {
        int type,x,y;
        if (scanf("%d %d %d",&type,&x,&y) != 3) 
        return 0;
        int idx =(x^lastAnswer) % n;
        if(type == 1) {
            append(&arrays[idx], y);
        } 
        else if(type == 2) {
            int p = y % arrays[idx].size;
            lastAnswer = arrays[idx].data[p];
            answers[ansCount++] =lastAnswer;
        }
    }
 for (int i = 0; i < ansCount; i++) printf("%d\n",answers[i]);
    for (int i = 0; i < n; i++) free(arrays[i].data);
    free(arrays);
    free(answers);
    return 0;
}
